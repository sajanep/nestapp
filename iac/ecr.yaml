AWSTemplateFormatVersion: "2010-09-09"
Description: "ECR repository"

Parameters:
  Env:
    Type: String
    Default: "dev"
    Description: Environment
  
  IAMUserName:
    Type: String
    Default: "Sajan"
    Description: IAM User who can push/pull images to and from ECR

  ProjectName:
    Type: String
    Description: Project Name   

Mappings:
  LifecyclePolicies:
    DefaultPolicy:
      PolicyText: |
        {
          "rules": [
              {
                "rulePriority": 1,
                "description": "Keep Only 3 latest images",
                "selection": {
                    "tagStatus": "any",
                    "countType": "imageCountMoreThan",
                    "countNumber": 3
                },
                "action": {
                    "type": "expire"
                }
              }
          ]
        }

Conditions: 
  IsProduction: !Equals ["prod", !Ref Env]

Resources: 
  ApiServiceEcrRepo:
    Type: AWS::ECR::Repository
    Properties:       
      RepositoryName: !Sub ${ProjectName}-api-${Env}
      LifecyclePolicy: 
        LifecyclePolicyText: !FindInMap [ LifecyclePolicies, DefaultPolicy, PolicyText ]
  
   # IAM Policy for ECR
  ECRPushPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AllowECRPushAccess
      Users:
        - !Ref IAMUserName
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
              - ecr:BatchCheckLayerAvailability
              - ecr:PutImage
              - ecr:InitiateLayerUpload
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload
              - ecr:DescribeRepositories
              - ecr:BatchGetImage
              - ecr:GetDownloadUrlForLayer
            Resource: !GetAtt ApiServiceEcrRepo.Arn

Outputs:
  ApiEcrRepoUri:
    Description: The ECR URL for API Service.
    Value: !GetAtt ApiServiceEcrRepo.RepositoryUri