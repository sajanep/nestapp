AWSTemplateFormatVersion: '2010-09-09'
Description: Template for an API service that runs as an ECS task and is accessed via the load balancer.

Parameters:
  VpcId:
    Description: VPC where the ECS tasks and ALB will run
    Type: AWS::EC2::VPC::Id

  SubnetIds:
    Description: List of subnets for ALB
    Type: List<AWS::EC2::Subnet::Id>

Resources:
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: FargateTask
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      TaskRoleArn: !GetAtt TaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: web
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ProjectName}-api-${Env}:latest
          PortMappings:
            - ContainerPort: 3000
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ApiCloudwatchLogsGroupEnv
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: api

  ECSService:
    Type: AWS::ECS::Service
    DependsOn:
      - ALBListener
    Properties:
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref TaskDefinition
      LaunchType: FARGATE
      DesiredCount: 2
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: !Ref SubnetIds
          SecurityGroups:
            - !Ref TaskSecurityGroup
      LoadBalancers:
        - ContainerName: web
          ContainerPort: 80
          TargetGroupArn: !Ref ALBTargetGroup

  TaskSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ECS tasks
      VpcId: !Ref VpcId

  ApiCloudwatchLogsGroupEnv:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      LogGroupName: !Sub ${ProjectName}-api-ecs-log-${Env}
      RetentionInDays: 30 
  
  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: ECSFargateTargetGroup
      Protocol: HTTP
      Port: 80
      VpcId: !Ref VpcId
      TargetType: ip
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      Matcher:
        HttpCode: 200
  
  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref ALBListener
      Conditions:
        - Field: path-pattern
          Values:
            - "/api/*"
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
      Priority: 1